<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Software</title>
        <description>Yet another blog on software stuff</description>
        <link>https://agileek.github.io/</link>
        <atom:link href="https://agileek.github.io/feed.xml" rel="self" type="application/rss+xml" />
        <pubDate>Wed, 28 Oct 2020 07:34:19 +0000</pubDate>
        <lastBuildDate>Wed, 28 Oct 2020 07:34:19 +0000</lastBuildDate>
        <generator>Jekyll v4.1.0</generator>
        
        <item>
            <title>Using an AWS ECR image as a Github Action container</title>
            <description>&lt;h2 id=&quot;moving-from-docker-hub-to-ecr&quot;&gt;Moving from Docker Hub to ECR&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pubstack.io/&quot;&gt;Pubstack&lt;/a&gt;, my current client decided to migrate all its docker images to &lt;a href=&quot;https://aws.amazon.com/ecr/&quot;&gt;ECR&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With the recent &lt;a href=&quot;https://www.docker.com/pricing/resource-consumption-updates&quot;&gt;announcement&lt;/a&gt; about rate limiting on Docker Hub, maybe we will not be the only ones moving away.&lt;/p&gt;

&lt;p&gt;For our &lt;strong&gt;CI/CD&lt;/strong&gt; pipelines we use both &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; and &lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using an &lt;strong&gt;ECR&lt;/strong&gt; image is a really simple task in &lt;strong&gt;CircleCI&lt;/strong&gt;, it consists of adding the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws_auth&lt;/code&gt; to the image configuration.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;na&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ACCOUNT.dkr.ecr.REGION.amazonaws.com/IMAGE:VERSION&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;aws_auth&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;aws_access_key_id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$AWS_ACCESS_KEY_ID&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;aws_secret_access_key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$AWS_SECRET_ACCESS_KEY&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On the other hand, using &lt;strong&gt;ECR&lt;/strong&gt; images in &lt;strong&gt;GitHub Actions&lt;/strong&gt; was a bit more tricky.&lt;/p&gt;

&lt;p&gt;The problem is, you could only use images from private registries in job and service containers since &lt;a href=&quot;https://github.blog/changelog/2020-09-24-github-actions-private-registry-support-for-job-and-service-containers/&quot;&gt;late september&lt;/a&gt;, and they only did the “credentials” implementation.
It means something like this is expected:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ACCOUNT.dkr.ecr.REGION.amazonaws.com/IMAGE:VERSION&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.ECR_PASSWORD }}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;inside an ecr container&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With aws, you can get a password with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws ecr get-login-password&lt;/code&gt;, and it is valid 12 hours.&lt;/p&gt;

&lt;p&gt;You can manually set the GitGub secret “ECR_PASSWORD” every 12 hours, but that’s not really convenient.&lt;/p&gt;

&lt;p&gt;After a little digging, I found an &lt;a href=&quot;https://github.community/t/github-actions-new-pulling-from-private-docker-repositories/16089/28&quot;&gt;answer&lt;/a&gt; on a GitHub community thread explaining what seems like a good solution.&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Basically what we will do is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Retrieve &lt;strong&gt;ECR&lt;/strong&gt; password from aws&lt;/li&gt;
  &lt;li&gt;Store it as a &lt;strong&gt;GitHub&lt;/strong&gt; secret name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ECR_PASSWORD&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All that inside a &lt;strong&gt;GitHub&lt;/strong&gt; action scheduled to run every 6 hours.&lt;/p&gt;

&lt;p&gt;It was not really as simple as I first thought, so here is all I had to do.
I hope it can help you.&lt;/p&gt;

&lt;p&gt;First, I created some aws credentials (ie. a couple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws_access_key_id&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws_secret_access_key&lt;/code&gt; with enough right to pull from ECR)
I put them as secrets inside the &lt;strong&gt;GitHub&lt;/strong&gt; project, let’s call them &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;.
Then I generated a personal access token (the “provided by default” &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GITHUB_TOKEN&lt;/code&gt; doest not have sufficient rights), let’s call it &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GH_API_ACCESS_TOKEN&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The complete &lt;strong&gt;GitHub&lt;/strong&gt; workflow:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ecr-login&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Every 6 hours, the password validity is 12 hours&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*/6&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Checkout&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS cli install action&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chrislennon/action-aws-cli@1.1&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;retrieve ecr password and store as secret&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;pip3 install -r .github/requirements.txt&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;python3 .github/ecr_password_updater.py&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.AWS_ACCESS_KEY_ID }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.AWS_SECRET_ACCESS_KEY }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;AWS_DEFAULT_REGION&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS_REGION&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;GH_API_ACCESS_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.GH_API_ACCESS_TOKEN }}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# This 'test' job is usefull for fast debugging&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;needs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;login&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ACCOUNT.dkr.ecr.REGION.amazonaws.com/IMAGE:VERSION&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Here is the password retrieved as a secret that is set by the `login` job&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.ECR_PASSWORD }}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;Inside a container pulled from ECR \o/&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ecr_password_updater.py&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;base64&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nacl&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_public_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Encrypt a Unicode string using the public key.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;public_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PublicKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_public_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Base64Encoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sealed_box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SealedBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;public_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sealed_box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;get_public_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f'https://api.github.com/repos/ORG/REPOSITORY/actions/secrets/public-key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                  &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Accept'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'application/vnd.github.v3+json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                           &lt;span class=&quot;s&quot;&gt;'Authorization'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'token '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'GH_API_ACCESS_TOKEN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_public_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'could not retrieve public key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_public_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get_public_key_response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_public_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;public_key_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_public_key_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;public_key_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_public_key_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'key_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'aws'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ecr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get-login-password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encrypted_password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;public_key_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;update_password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://api.github.com/repos/ORG/REPOSITORY/actions/secrets/ECR_PASSWORD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Accept'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'application/vnd.github.v3+json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                            &lt;span class=&quot;s&quot;&gt;'Authorization'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'token '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'GH_API_ACCESS_TOKEN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'encrypted_value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypted_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'key_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public_key_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'could not update password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The dependencies used by the python code:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pynacl==1.4.0
requests==2.24.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I first started with a simple bash script, but it became quite complex&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, so I switched to python.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;ok, maybe not good, but at least it works &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;you need to encrypt the password, and you need the public key id of the repository when you put the encrypted secret. I often start with bash, if it’s simple enough I keep it, if not I switch to python. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/software/aws/2020/10/28/using-an-ecr-image-in-github-actions/</link>
            <guid isPermaLink="true">https://agileek.github.io/software/aws/2020/10/28/using-an-ecr-image-in-github-actions/</guid>
            
            <category>software</category>
            
            <category>aws</category>
            
            <category>cloud</category>
            
            
            <category>software</category>
            
            <category>aws</category>
            
        </item>
        
        <item>
            <title>The Twelve-Factor App Checklist</title>
            <description>&lt;h2 id=&quot;twelve-factor-application&quot;&gt;Twelve-Factor Application&lt;/h2&gt;

&lt;p&gt;If you don’t know about the 12 factor applications, I suggest you &lt;a href=&quot;https://12factor.net/&quot;&gt;read this first.&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The twelve-factor app is a methodology for building software-as-a-service apps&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;During my different missions, I found that these guidelines are wonderful for building and deploying software.&lt;/p&gt;

&lt;p&gt;I eventualy came up with a checklist I use on my clients’ projects in order to assess the team’s maturity level, and track what can be done to improve the application.&lt;/p&gt;

&lt;p&gt;I released it on &lt;a href=&quot;https://github.com/agileek/Twelve-Factor-App-Checklist&quot;&gt;github&lt;/a&gt; and you can find the html version below.&lt;/p&gt;

&lt;iframe style=&quot;border: 1px solid black;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;100%&quot; height=&quot;1024&quot; src=&quot;https://htmlpreview.github.io/?https://github.com/agileek/Twelve-Factor-App-Checklist/blob/master/Twelve-Factor-App-Checklist.html&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;This is of course just a scaffolder, I hope you will find it useful.&lt;/p&gt;

</description>
            <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/software/2020/07/14/twelve-factor-app-checklist/</link>
            <guid isPermaLink="true">https://agileek.github.io/software/2020/07/14/twelve-factor-app-checklist/</guid>
            
            <category>software</category>
            
            <category>12Factor</category>
            
            
            <category>software</category>
            
        </item>
        
        <item>
            <title>Going mouseless #1: Git push a new branch</title>
            <description>&lt;blockquote&gt;
  &lt;p&gt;TLDR: install thefuck&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-right-tool-for-the-right-job&quot;&gt;The Right Tool for the Right Job&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Using the right tool for the right job&lt;/strong&gt; is kind of why I can’t decide myself on using one programming language.&lt;/p&gt;

&lt;p&gt;When it comes to programming, I have the feeling that using the mouse is highly unefficient.&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;It really breaks the flow, you are in the process of writing some code, with both your hands on the keyboard, and all of a sudden you grab the mouse to, I don’t know, launch the tests or click on some website you are testing.
I don’t like that.&lt;/p&gt;

&lt;p&gt;What I try to do on a daily basis is find &lt;strong&gt;where&lt;/strong&gt; and &lt;strong&gt;when&lt;/strong&gt; my mouse is breaking my flow.&lt;/p&gt;

&lt;p&gt;This (I hope so) will be a series of articles where I take one part of my working flow and try to get rid of the mouse.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Protip&lt;/strong&gt;: Put my mouse on its back so every access to the mouse is a conscious one. Try it, and let me know.&lt;/p&gt;

&lt;h2 id=&quot;the-git-flow&quot;&gt;The git ‘flow’&lt;/h2&gt;

&lt;p&gt;Each time I work on a new task, I start by creating a new branch. 
Let’s say I work on this article.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git co -b going-mouseless-part-1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After that I create the file, write some stuff down, the usual…&lt;/p&gt;

&lt;p&gt;When I’m satisfied with my work, I commit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add mouseless-article-1.md
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;meaningful commit message&quot;&lt;/span&gt;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and &lt;strong&gt;BAM&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fatal: The current branch going-mouseless-part-1 has no upstream branch.
To push the current branch and &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;the remote as upstream, use

    git push &lt;span class=&quot;nt&quot;&gt;--set-upstream&lt;/span&gt; origin going-mouseless-part-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I grab my mouse, select the last line and copy/paste it. At least that’s what I used to do.&lt;/p&gt;

&lt;p&gt;A perfect solution for this use case is &lt;a href=&quot;https://github.com/nvbn/thefuck&quot;&gt;TheFuck&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Magnificent app which corrects your previous console command.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once installed, instead of grabbing my mouse, I just type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fuck&lt;/code&gt; then enter twice and that’s it!&lt;/p&gt;

&lt;p&gt;Here is a complete demo:&lt;/p&gt;

&lt;asciinema-player src=&quot;/images/posts/mouseless/mouseless_1&quot; cols=&quot;120&quot; rows=&quot;20&quot;&gt;&lt;/asciinema-player&gt;

&lt;p&gt;This tool is a really useful one, it saves me on a daily basis with everything, typos, missing sudo,… plus, it’s pleasant to curse.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;This is only my opinion &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/terminal/2020/02/24/getting_rid_of_the_mouse_part_1/</link>
            <guid isPermaLink="true">https://agileek.github.io/terminal/2020/02/24/getting_rid_of_the_mouse_part_1/</guid>
            
            <category>keyboard</category>
            
            <category>mouse</category>
            
            <category>terminal</category>
            
            <category>git</category>
            
            
            <category>terminal</category>
            
        </item>
        
        <item>
            <title>Login to AWS ECR using systemd</title>
            <description>&lt;h2 id=&quot;first-try-without-systemd&quot;&gt;First try without systemd&lt;/h2&gt;

&lt;p&gt;During my previous mission, we used AWS ECR to manage the docker images.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Amazon EC2 Container Registry (ECR) is a fully-managed Docker container registry that makes it easy for developers to store, manage, and deploy Docker container images.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To be able to store/retrieve docker images, you have to be authenticated.
AWS CLI provides a command which takes your credentials and generate a token, authenticating the user for 12 hours.&lt;/p&gt;

&lt;p&gt;Our continuous integration servers (ie. Jenkins nodes) needed to access to the ECR so we had to provide an automated mechanism.&lt;/p&gt;

&lt;p&gt;The first idea was to use 2 crons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The first on @reboot, to ensure the machine will be authenticated upon reboot.&lt;/li&gt;
  &lt;li&gt;The second every 11 hours.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was not a good idea, sometimes it did not work and it was difficult to know why.
(In fact, the @reboot only works when using root, which we try to avoid)&lt;/p&gt;

&lt;h2 id=&quot;systemd&quot;&gt;Systemd&lt;/h2&gt;

&lt;p&gt;So we used systemd and:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;it just worked&lt;/li&gt;
  &lt;li&gt;we can monitor the executions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the unit located here: /etc/systemd/system/docker_ecr_login.service&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Docker aws ecr login
&lt;span class=&quot;nv&quot;&gt;Wants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;network-online.target
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;network.target network-online.target

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;oneshot
&lt;span class=&quot;nv&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;builder
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$$(/usr/bin/aws ecr get-login --no-include-email)'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;default.target&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Dont forget to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl daemon-reload&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl enable docker_ecr_login&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we only use one cron, every 11 hours it launches &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl start docker_ecr_login&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;investigate&quot;&gt;Investigate&lt;/h3&gt;

&lt;p&gt;Now it’s easier to monitor past executions with:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;journalctl &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; docker_ecr_login
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; Logs begin at Fri 2017-05-19, end at Mon 2017-07-10. &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;
Starting Docker aws ecr login...
docker_ecr_login.service: Main process exited, &lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;exited, &lt;span class=&quot;nv&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;217/USER
Failed to start Docker aws ecr login.
docker_ecr_login.service: Unit entered failed state.
docker_ecr_login.service: Failed with result &lt;span class=&quot;s1&quot;&gt;'exit-code'&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The error status 217/USER means that the user ‘builder’ doesn’t exist on this system.&lt;/p&gt;

&lt;h3 id=&quot;todo&quot;&gt;ToDo&lt;/h3&gt;

&lt;p&gt;We are looking into systemd timers with something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnUnitActiveSec=&lt;/code&gt; we should be able to completely get rid of cron and go full systemd.&lt;/p&gt;
</description>
            <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/docker/terminal/2019/05/07/automatic_aws_ecr_get_login_with_systemd/</link>
            <guid isPermaLink="true">https://agileek.github.io/docker/terminal/2019/05/07/automatic_aws_ecr_get_login_with_systemd/</guid>
            
            <category>aws</category>
            
            <category>ecr</category>
            
            <category>docker</category>
            
            <category>systemd</category>
            
            
            <category>docker</category>
            
            <category>terminal</category>
            
        </item>
        
        <item>
            <title>Devoxx 2016: Huntly or nothing!</title>
            <description>&lt;blockquote&gt;
  &lt;p&gt;La version originale de ce post en Français peut être trouvée ici : &lt;a href=&quot;https://code-troopers.com/2016/05/20/devoxx-2016-huntly.html&quot;&gt;https://code-troopers.com/2016/05/20/devoxx-2016-huntly.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This year at Devoxx France, I was the only Code-Troopers&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; available but it didn’t matter because I found Michaël&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, former “tourangeau” colleague currently living in Toulouse.
We are going to talk to you about how fun these 3 days were.&lt;/p&gt;

&lt;p&gt;For the 2016 DevoxxFR edition, something came up that should have come sooner: we are talking about official mobile applications.
Nothing astonishing here you could say, and I agree because for the previous editions we had some good fellows, working on their free time I guess, which provided some alternatives allowing us to have a digital schedule in our pocket.&lt;br /&gt;
Instead of “just” publishing an application allowing to see and manage your sessions (that’s &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.devoxx&quot;&gt;My devoxx&lt;/a&gt;), they also published on the stores the &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.devoxx.huntly&quot;&gt;Devoxx Huntly&lt;/a&gt; application, which tag line is “Win tickets for devoxx events”.&lt;/p&gt;

&lt;p&gt;Our first thought was: playing to win devoxx tickets, it deserves more attention.&lt;/p&gt;

&lt;p&gt;In the following we are only going to talk about the Android application, since we don’t have Iphones.&lt;/p&gt;

&lt;div style=&quot;text-align : center&quot;&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_app1.png&quot; data-lightbox=&quot;2&quot; title=&quot;Devoxx Huntly screenshot&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_app1_min.png&quot; alt=&quot;Devoxx Huntly screenshot&quot; /&gt;
&lt;/a&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_app2.png&quot; data-lightbox=&quot;2&quot; title=&quot;Devoxx Huntly screenshot - Quests list&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_app2_min.png&quot; alt=&quot;Devoxx Huntly screenshot - Quests list&quot; /&gt;
&lt;/a&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_app3.png&quot; data-lightbox=&quot;2&quot; title=&quot;Devoxx Huntly screenshot - Quest done&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_app3_min.png&quot; alt=&quot;Devoxx Huntly screenshot - Quest done&quot; /&gt;
&lt;/a&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-it-works-and-whats-its-purpose&quot;&gt;How it works and what’s its purpose?&lt;/h2&gt;

&lt;p&gt;The goal is pretty simple, you have to get the most points as possible. How it works? By scanning QR codes like the ones below through the application. Child’s play.&lt;/p&gt;

&lt;p&gt;On a good note, the QR codes where on each and every exhibitors’ booth. It’s a fun way to walk through all of them.
And of course we did it.
In most cases, the simple action of scanning the QR code was a good way to engage the conversation with the people on the booths.&lt;/p&gt;

&lt;p&gt;Sometimes (Mostly the first day), we had to explain to the exhibitor what was this QR code (sometimes we even had to find it since it was well hidden) and what was it’s purpose. (We thought it was unfortunate that the exhibitors were not more involved in huntly).
We won’t lie to you, we didn’t spoke to every exhibitor, some seemed less appealing and we kind of dodged them.
But truth be told, this year is the year I spoke with the most exhibitors, and it was thanks to huntly.&lt;/p&gt;

&lt;p&gt;Since it was the first release, of course there was some minor fixes/tweaks that needed to be made, and scalac team was really reactiv: there was at least 2 updates during the 3 days which fixed a twitter integration and a contact scan bug. (I am of course talking about the Android application, because, well, on IOS… :P)&lt;/p&gt;

&lt;div style=&quot;text-align : center&quot;&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand1.png&quot; data-lightbox=&quot;0&quot; title=&quot;Aldebaran's booth QRCode&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand1_min.png&quot; alt=&quot;Aldebaran's booth QRCode&quot; /&gt;
&lt;/a&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand2.png&quot; data-lightbox=&quot;0&quot; title=&quot;SII's booth QR code&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand2_min.png&quot; alt=&quot;SII's booth QR code&quot; /&gt;
&lt;/a&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand3.png&quot; data-lightbox=&quot;0&quot; title=&quot;Stackoverflow's booth QR code&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand3_min.png&quot; alt=&quot;Stackoverflow's booth QR code&quot; /&gt;
&lt;/a&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand4.png&quot; data-lightbox=&quot;0&quot; title=&quot;Amazon's booth QR code&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand4_min.png&quot; alt=&quot;Amazon's booth QR code&quot; /&gt;
&lt;/a&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand_huntly.png&quot; data-lightbox=&quot;0&quot; title=&quot;Devoxx Huntly's booth&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_stand_huntly_min.png&quot; alt=&quot;Devoxx Huntly's booth&quot; /&gt;
&lt;/a&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_porte.png&quot; data-lightbox=&quot;0&quot; title=&quot;QR code on a room's door&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_tag_porte_min.png&quot; alt=&quot;QR code on a room's door&quot; /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-we-liked&quot;&gt;What we liked&lt;/h2&gt;

&lt;p&gt;When you are at a developers’ conference, you can be sure there will be some people trying to push the application to it’s limits (We could call them cheaters, we prefer hackers or, even better, security auditors).
We saw really quickly that one person was really ahead of the others (Yes Frédéric Camblor, we are talking about you :))
He was a real fair player, he turned himself in (You can see Stephan punching him as a reward), and he explained that he used an ssl vulnerability, because the client/server communication was not using tls.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_stephan_pushing_fcamblor.png&quot; alt=&quot;devoxx2016_huntly_stephan_pushing_fcamblor&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-didnt-work&quot;&gt;What didn’t work&lt;/h2&gt;

&lt;p&gt;Some quests were check-ins, all you had to do was go in every room and some beacons where supposed to automatically detect and update the quest.
Unfortunately, I never got one signal, even with the bluetooth always on.
If someone had better luck, I’d like to know how it worked (The only beacon detected was the one I had in my bag, he was detected by Michaël after one hour of close pair programming during a workshop).
Fortunately there was a backup plan, you could always scan the QR codes.&lt;/p&gt;

&lt;h2 id=&quot;evolutions&quot;&gt;Evolutions&lt;/h2&gt;

&lt;p&gt;Even if we went through all the different booths, the one we spent most of our time on was the huntly one. We talked about what could be improved for the next devoxx events, mostly on how to win even more points!&lt;/p&gt;

&lt;p&gt;Here are few improvements we will be happy to see next year:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A better lost points management: when scanning QR code sometimes you had to answer some questions, and it was not clear at all that each wrong answer divided by 2 the points that you could win on this quest. It’s a great idea, but it has to be visually improved, because we understood that only once the huntly developers explained to us.&lt;/li&gt;
  &lt;li&gt;The first quest when you launch the application is to enter a sponsorship code. The problem is when you are among the firsts to use it, you can’t complete this quest, it’s not rewarding for the early birds.&lt;/li&gt;
  &lt;li&gt;For every quests you could win a lot more points by tweeting about it. Problem is, with more than 50 quests, it looked a lot like massive spam (the devoxx tweetwall was full of them&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;)&lt;/li&gt;
  &lt;li&gt;In my opinion the better thing to improve will be to allow to link the application to the different games that were on the booths. Having a global ladder of all the different booths could be really entertaining.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The winners were announced during the &lt;a href=&quot;https://youtu.be/h2hA3TSTdpw?t=4m13s&quot;&gt;cast codeurs episode&lt;/a&gt; and we couldn’t be there this year. Michaël won a free ticket for DevoxxFR 2017. I’ll do better next time!&lt;/p&gt;

&lt;div style=&quot;text-align : center&quot;&gt;
&lt;a class=&quot;inlineBoxes&quot; href=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_classment_final.png&quot; data-lightbox=&quot;1&quot; title=&quot;final ladder&quot;&gt;
        &lt;img class=&quot;medium&quot; src=&quot;/images/posts/2016-05-DevoxxHuntly/devoxx2016_huntly_classment_final_min.png&quot; alt=&quot;final ladder&quot; /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The MyDevoxx source code is on &lt;a href=&quot;https://github.com/devoxx/AndroidMobileApp&quot;&gt;github&lt;/a&gt;, not the huntly one (yet).&lt;/p&gt;

&lt;p&gt;A good news is, since these applications are going to be used in every Devoxx event, we can be sure that they will quickly evolve and we will have to face some new challenges next year for Devoxx France 2017&lt;/p&gt;

&lt;p&gt;See you next year!&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;They are a team of passionate developers &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;That’s me! Refering to myself &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;The tweetwall was really useless, the images werent displayed!!! What a shame. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Thu, 19 May 2016 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/java/2016/05/19/devoxx_2016_huntly/</link>
            <guid isPermaLink="true">https://agileek.github.io/java/2016/05/19/devoxx_2016_huntly/</guid>
            
            <category>devoxx</category>
            
            <category>gamification</category>
            
            
            <category>java</category>
            
        </item>
        
        <item>
            <title>Http is dead</title>
            <description>&lt;p&gt;In a &lt;a href=&quot;/jekyll/2015/11/20/disqus-https-and-http/&quot;&gt;previous article&lt;/a&gt; I talked about switching to &lt;strong&gt;&lt;em&gt;https&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Since the 3rd December, &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;&lt;em&gt;Let’s Encrypt&lt;/em&gt;&lt;/a&gt; is in public beta&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, that means that everybody can have free trusted ssl certificates.&lt;/p&gt;

&lt;p&gt;That’s right, you heard it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/letsencrypt/meme.jpg&quot; alt=&quot;OprahHttps&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What would be an agileek article without a little bit of &lt;strong&gt;Docker&lt;/strong&gt; in it?&lt;/p&gt;

&lt;h1 id=&quot;goal&quot;&gt;Goal&lt;/h1&gt;

&lt;p&gt;I will show you how to generate and use an ssl certificate with nginx.&lt;/p&gt;

&lt;p&gt;First, you generate the certificate with:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 443:443 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; letsencrypt &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /etc/letsencrypt:/etc/letsencrypt &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /var/lib/letsencrypt:/var/lib/letsencrypt quay.io/letsencrypt/letsencrypt:latest &lt;span class=&quot;nt&quot;&gt;--server&lt;/span&gt; https://acme-v01.api.letsencrypt.org/directory certonly &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; standalone &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; hello.bitard.fr&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then you configure your nginx in order to use this certificates :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssl_certificate      /etc/letsencrypt/live/bitard.fr-0001/fullchain.pem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ssl_certificate_key  /etc/letsencrypt/live/bitard.fr-0001/privkey.pem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ssl_session_timeout 1d&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ssl_session_cache shared:SSL:50m&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ssl_session_tickets off&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# modern configuration. tweak to your needs.&lt;/span&gt;
ssl_protocols TLSv1.1 TLSv1.2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ssl_ciphers &lt;span class=&quot;s1&quot;&gt;'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    ssl_prefer_server_ciphers on;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)&lt;/span&gt;
add_header Strict-Transport-Security max-age&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;15768000&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# OCSP Stapling ---&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# fetch OCSP records from URL in ssl_certificate and cache them&lt;/span&gt;
ssl_stapling on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ssl_stapling_verify on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;## verify chain of trust of OCSP response using Root CA and Intermediate certs&lt;/span&gt;

server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        listen       443 ssl&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        server_name  hello.bitard.fr&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        location / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;            
            add_header Content-Type text/plain&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;200 &lt;span class=&quot;s1&quot;&gt;'Take a look at this awesome certificate!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aaaaaaand it’s done.&lt;/p&gt;

&lt;p&gt;You can look at &lt;a href=&quot;https://hello.bitard.fr/&quot;&gt;https://hello.bitard.fr/&lt;/a&gt; and see that everything is &lt;img src=&quot;/images/posts/letsencrypt/super_green.gif&quot; alt=&quot;so green&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;You can donate to them:  &lt;a href=&quot;https://letsencrypt.org/donate&quot;&gt;https://letsencrypt.org/donate&lt;/a&gt; or to EFF: &lt;a href=&quot;https://eff.org/donate-le&quot;&gt;https://eff.org/donate-le&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Sat, 05 Dec 2015 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/docker/2015/12/05/letsencrypt-https/</link>
            <guid isPermaLink="true">https://agileek.github.io/docker/2015/12/05/letsencrypt-https/</guid>
            
            <category>letsencrypt,docker</category>
            
            
            <category>docker</category>
            
        </item>
        
        <item>
            <title>Raspberry Pi, RFXCom and Domoticz</title>
            <description>&lt;p&gt;This begins a serie of home automation articles.&lt;/p&gt;

&lt;h2 id=&quot;first-step&quot;&gt;First step&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/home_automation/yc-4000s.jpg&quot; alt=&quot;phenix&quot; class=&quot;float_image&quot; /&gt;
I recommend to start with something easy.&lt;/p&gt;

&lt;p&gt;I tried a remote controllable wall socket a few years ago, and it really works very well. I use it to control 4 lights area in my living room.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Now it’s time to take it to the next level!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;choose-wisely&quot;&gt;Choose wisely&lt;/h2&gt;

&lt;p&gt;There are 2 main wireless protocols to communicate with your devices, 433.92 MHz and Z-wave.&lt;/p&gt;

&lt;p&gt;433.92 MHz is just the communication frequency, and every constructor implements its own protocol.&lt;/p&gt;

&lt;p&gt;There are a lot of devices you can find using 433.92 MHz, but if you want to control everything, you’ll need something generic.&lt;/p&gt;

&lt;p&gt;Here comes the &lt;a href=&quot;http://www.rfxcom.com/en_GB&quot;&gt;rfxcom&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the world of domotics you can order your equipment from a wide range of suppliers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s a usb device that receives and sends signals via 433.92 MHz.&lt;/p&gt;

&lt;p&gt;With that tool I needed a “home brain”, something that could control various stuff.&lt;/p&gt;

&lt;p&gt;After some digging (and advices from &lt;a href=&quot;https://twitter.com/florianchauveau&quot;&gt;Florian Chauveau&lt;/a&gt;), I decided to use &lt;a href=&quot;https://domoticz.com/&quot;&gt;domoticz&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;glue-it-all-together&quot;&gt;Glue it all together&lt;/h2&gt;

&lt;h3 id=&quot;docker-on-raspberry-pi&quot;&gt;Docker on raspberry pi&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/home_automation/raspberry_pi_logo.svg&quot; alt=&quot;raspberrypi&quot; class=&quot;float_image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recommend to look at &lt;a href=&quot;https://github.com/fchauveau/rpi-domoticz-docker&quot;&gt;https://github.com/fchauveau/rpi-domoticz-docker&lt;/a&gt;, everything is explained:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setup an image on your sdcard with docker 32bits installed&lt;/li&gt;
  &lt;li&gt;Build the rpi-domoticz-docker image on your raspberry (optional if you pull it from the registry)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;recipe&quot;&gt;Recipe&lt;/h3&gt;
&lt;p&gt;Here is what I did&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Download a docker ready image for your sdcard at &lt;a href=&quot;http://blog.hypriot.com/downloads/&quot;&gt;http://blog.hypriot.com/downloads/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Copy the image to the sdcard
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo dd if=hypriot-rpi-20151103-224349.img of=/dev/mmcblk0 bs=1M&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Start your raspberry&lt;/li&gt;
  &lt;li&gt;Plug in the rfxcom&lt;/li&gt;
  &lt;li&gt;Connect to it via ssh (root/hypriot)&lt;/li&gt;
  &lt;li&gt;Get the latest rpi-domoticz-docker
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker pull agileek/rpi-domoticz-docker&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Launch it
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker run --device=/dev/ttyUSB0 -p 8080:8080 -d agileek/rpi-domoticz-docker&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;Backup &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-v /root/domoticz.db:/root/domoticz/domoticz.db&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Connect to domoticz http://mydomoticzserveraddress:8080&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t forget to add the rfxcom to the hardware list and enjoy!&lt;/p&gt;

</description>
            <pubDate>Sat, 05 Dec 2015 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/home_automation/2015/12/05/home_automation_domoticz/</link>
            <guid isPermaLink="true">https://agileek.github.io/home_automation/2015/12/05/home_automation_domoticz/</guid>
            
            <category>domoticz,docker,raspberryPi</category>
            
            
            <category>home_automation</category>
            
        </item>
        
        <item>
            <title>Forcing https for GitHub Pages and Disqus</title>
            <description>&lt;h3 id=&quot;observation&quot;&gt;Observation&lt;/h3&gt;

&lt;p&gt;This blog uses &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, which are by default available using both &lt;strong&gt;&lt;em&gt;http&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;https&lt;/em&gt;&lt;/strong&gt; protocols.&lt;/p&gt;

&lt;p&gt;The comments are powered by Disqus, and it works really well. Almost really well, actually, because something strange appeared using only &lt;strong&gt;&lt;em&gt;https&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Why switching to &lt;strong&gt;&lt;em&gt;https&lt;/em&gt;&lt;/strong&gt; only ?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2015/04/30/deprecating-non-secure-http/&quot;&gt;Firefox starts to deprecate non secure &lt;strong&gt;&lt;em&gt;http&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://googlewebmastercentral.blogspot.fr/2014/08/https-as-ranking-signal.html&quot;&gt;Https as a ranking signal on google&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://letsencrypt.org/2015/10/19/lets-encrypt-is-trusted.html&quot;&gt;Let’s Encrypt is trusted!&lt;/a&gt;&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;force-https-on-github-pages&quot;&gt;Force &lt;strong&gt;&lt;em&gt;https&lt;/em&gt;&lt;/strong&gt; on Github Pages&lt;/h3&gt;

&lt;p&gt;I found this gist to force the &lt;strong&gt;&lt;em&gt;https&lt;/em&gt;&lt;/strong&gt; redirection, simple, efficient.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;&amp;lt;script&amp;gt;
var host = &amp;quot;YOURDOMAIN.github.io&amp;quot;;
if ((host == window.location.host) &amp;amp;&amp;amp; (window.location.protocol != &amp;quot;https:&amp;quot;))
    window.location.protocol = &amp;quot;https&amp;quot;;
&amp;lt;/script&amp;gt;&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/konklone/9968713.js?file=ssl-redirect.html&quot;&gt; &lt;/script&gt;

&lt;p&gt;Then I noticed that some of the comments were gone. As you can see on the animation below, they appeared only when using &lt;strong&gt;&lt;em&gt;http&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/jekyll/disqus_http_https.gif&quot; alt=&quot;Disqus http vs https&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;migrate-disqus-comments&quot;&gt;Migrate Disqus comments&lt;/h3&gt;

&lt;p&gt;In fact, Disqus treat &lt;a href=&quot;http://agileek.github.io&quot;&gt;http://agileek.github.io&lt;/a&gt; and &lt;a href=&quot;https://agileek.github.io&quot;&gt;https://agileek.github.io&lt;/a&gt; as 2 differents sites&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, so if someone post a comment on the &lt;strong&gt;&lt;em&gt;http&lt;/em&gt;&lt;/strong&gt; “version” it’s not displayed on the &lt;strong&gt;&lt;em&gt;https&lt;/em&gt;&lt;/strong&gt; side.&lt;/p&gt;

&lt;p&gt;Luckily, Disqus has some migration tools, and in this case an &lt;strong&gt;“URL mapper”&lt;/strong&gt; which can be found in the admin section “https://YOURDISQUSNAME.disqus.com/admin/discussions/migrate/”.&lt;/p&gt;

&lt;p&gt;It’s a three steps procedure:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download via Disqus admin tool the list of &lt;a href=&quot;/images/posts/jekyll/initial_disqus_import.csv&quot;&gt;blog posts.&lt;/a&gt;&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
  &lt;li&gt;Add a second column where “http” is &lt;a href=&quot;/images/posts/jekyll/disqus_mapper.csv&quot;&gt;replaced by “https”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Launch the migration&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;24 hours later, all the comments are available via the &lt;strong&gt;&lt;em&gt;https&lt;/em&gt;&lt;/strong&gt; URL, and nobody can comment on the &lt;strong&gt;&lt;em&gt;http&lt;/em&gt;&lt;/strong&gt; part thanks to the script above.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Ok, this is not relevant here since I’m using GitHub’s certificates, but Let’s Encrypt is just too huge to not talk about. I will soon write an article about it. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;The “issue” has been reported several times but never corrected, is this a hidden feature? &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;There is a lot of unnecessary links, even my drafts appear here &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Fri, 20 Nov 2015 14:00:00 +0000</pubDate>
            <link>https://agileek.github.io/jekyll/2015/11/20/disqus-https-and-http/</link>
            <guid isPermaLink="true">https://agileek.github.io/jekyll/2015/11/20/disqus-https-and-http/</guid>
            
            
            <category>jekyll</category>
            
        </item>
        
        <item>
            <title>Changer de mapping, changer de clavier</title>
            <description>&lt;p&gt;Cela fait bientôt 3 ans que j’ai changé de mapping et de clavier, il est temps de faire un petit bilan.&lt;/p&gt;

&lt;h2 id=&quot;le-choix-du-clavier&quot;&gt;Le choix du clavier&lt;/h2&gt;

&lt;p&gt;Il existe des tas de claviers, j’ai des collègues complètement à fond sur le sujet (Oui sylvain, c’est de toi que je parle, avec ton ergodox et Ctrl+Alt+Shift au pied) et les énumérer là n’est pas le sujet. Si je devais en citer 3, je pense qu’il y’aurait l’&lt;a href=&quot;http://ergodox.org/1&quot;&gt;ergodox&lt;/a&gt;, &lt;a href=&quot;http://www.keyboard.io/&quot;&gt;keyboard.io&lt;/a&gt; et le &lt;a href=&quot;http://www.typematrix.com/&quot;&gt;typematrix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;J’ai finalement choisi le typematrix.&lt;/p&gt;

&lt;h2 id=&quot;le-choix-du-mapping&quot;&gt;Le choix du mapping&lt;/h2&gt;

&lt;p&gt;Sujet interminable également, que choisir ? Dvorak, Bépo, Colemak ? Au final j’ai choisi Dvorak, plutôt par élimination.&lt;/p&gt;

&lt;p&gt;Premier éliminé : le Bépo car je code en anglais &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; et je compte coder encore un peu.&lt;/p&gt;

&lt;p&gt;Pour Colemak vs Dvorak, beaucoup d’articles très techniques se battent pour dire que leur mapping est n% plus rapide et demande moins de mouvements que l’autre, au final j’ai pris le plus utilisé : Dvorak (et puis, avoir toutes les voyelles du même côté, ça claque&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;

&lt;h2 id=&quot;lapprentissage&quot;&gt;L’apprentissage&lt;/h2&gt;

&lt;p&gt;Ça a été l’occasion pour moi de complètement ré-apprendre le clavier. Ce n’est vraiment pas facile et très frustrant (Vous ressemblez un peu à certains membres de votre famille, parfois même, plus choquant, des collègues qui ne sont pas à l’aise avec leur pc). Quitte à ré-apprendre, autant le faire bien, car j’ai appris l’azerty au fur et à mesure, en plaçant mes doigts n’importe comment sans jamais faire l’effort d’apprendre proprement. En fait si, avant d’acheter un typematrix, j’ai essayé de ré-apprendre l’azerty en faisant des exercices, mais au final les mauvaises habitudes étaient trop ancrées dans mes doigts.&lt;/p&gt;

&lt;h3 id=&quot;les-resources&quot;&gt;Les resources&lt;/h3&gt;

&lt;p&gt;Les resources pour apprendre sont nombreuses, certaines sont précises et vous montrent &lt;a href=&quot;http://thetypingcat.com/course/dvorak&quot;&gt;quel doigt utiliser&lt;/a&gt;, d’autres &lt;a href=&quot;http://learn.dvorak.nl/&quot;&gt;plus simples&lt;/a&gt;, je vous laisse chercher, certains sont IE 5 compliants, d’autres un peu plus récents.&lt;/p&gt;

&lt;p&gt;Au final après avoir passé plusieurs heures dessus, ça devient vite lassant. Étant joueur de tempérament, j’ai beaucoup apprécié &lt;a href=&quot;http://phoboslab.org/ztype/&quot;&gt;z-type&lt;/a&gt;, mais mon préféré reste &lt;a href=&quot;http://play.typeracer.com/&quot;&gt;typeracer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;N’hésitez pas à venir me défier sur ce site !&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://data.typeracer.com/pit/profile?user=bitardo&amp;amp;ref=badge&quot; target=&quot;_top&quot;&gt;&lt;img src=&quot;http://data.typeracer.com/misc/badge?user=bitardo&quot; class=&quot;float_image&quot; border=&quot;0&quot; alt=&quot;TypeRacer.com scorecard for user bitardo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ce qui est intéressant surtout c’est de pouvoir suivre notre progression : voici la mienne&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mapping/typeracer.png&quot; alt=&quot;typeracer&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;le-typematrix&quot;&gt;Le typematrix&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mapping/typematrix_dvorak.png&quot; alt=&quot;typematrix&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pas grand chose à dire dessus, j’en suis très content, tout est à disposition.&lt;/p&gt;

&lt;p&gt;Les plus :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;le côté matriciel est vraiment top&lt;/li&gt;
  &lt;li&gt;les touches delete, backspace et enter au milieu&lt;/li&gt;
  &lt;li&gt;le couper/copier/coller en accés rapide en bas à gauche&lt;/li&gt;
  &lt;li&gt;le switch de fenêtre avec la touche shuffle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les moins :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;le manque de pavé numérique (officiellement pour réduire l’encombrement)&lt;/li&gt;
  &lt;li&gt;les touches de fonction tout à droite vraiment inutiles (mais re-mappables)&lt;/li&gt;
  &lt;li&gt;la touche insert en accès Fn + Insert qui ne fonctionne pas sous certaines applis (j’ai mappé Insert à la place de la touche Mail…)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Après avoir galéré pendant 4-5 mois pour revenir à un niveau de frappe correct, je suis vraiment très satisfait d’avoir changé. Le fait d’avoir changé le clavier et le mapping me permet de conserver une certaine aisance avec les claviers azerty qui fait que je ne suis pas perdu quand je me retrouve sur mon laptop ou sur le poste d’un collègue. En effet, ça peut paraitre un peu bizarre, mais les doigts switchent assez naturellement d’azerty à dvorak car les touches ne sont pas disposées de la même façon.&lt;/p&gt;

&lt;p&gt;Mon seul regret est d’avoir pris un typematrix dvorak et pas un blank, parce que, étant fainéant, j’ai tendance à regarder mon clavier quand je frappe.&lt;/p&gt;

&lt;h4 id=&quot;ps&quot;&gt;PS&lt;/h4&gt;

&lt;p&gt;Dans un prochain article, j’expliquerai comment binomer quand on a des claviers et des mappings différents.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;certains codent en français, avec les accents dans les noms de méthode et tout, mais voir &lt;strong&gt;&lt;em&gt;public void&lt;/em&gt;&lt;/strong&gt; maméthode() ça me pique les yeux. [troll] Les mots clefs sont en anglais, codons en anglais [/troll]. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;argument objectif &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Wed, 15 Apr 2015 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/2015/04/15/typematrix-dvorak/</link>
            <guid isPermaLink="true">https://agileek.github.io/2015/04/15/typematrix-dvorak/</guid>
            
            
        </item>
        
        <item>
            <title>HTTPie and json: REST in your terminal</title>
            <description>&lt;p&gt;Je suis, comme &lt;a href=&quot;http://agileek.github.io/java/2015/04/08/devoxx-jour-1/#le-tar-du-terminal&quot;&gt;Emmanuel Bernard&lt;/a&gt;, un taré du terminal. Ce que je trouve génial avec cet outil, c’est qu’on n’arrête jamais de découvrir de nouvelles choses.&lt;/p&gt;

&lt;p&gt;Je vais vous parler de la combinaison de 2 outils pour jouer avec du Rest depuis votre terminal :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://httpie.org/&quot;&gt;HTTPie&lt;/a&gt;, qui est un “cURL-like tool for humans”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://trentm.com/json/&quot;&gt;json&lt;/a&gt; (très mauvais nom), qui est un utilitaire pour travailler sur du json&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour notre exemple on va jouer avec l’API de github, en essayant d’afficher tous les repos docker de l’organisation &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;agileek&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;p&gt;Sous ubuntu/debian : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get install httpie &amp;amp;&amp;amp; npm install -g json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Commençons par récupérer la liste des repos associée à mon organisation.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;http https://api.github.com/orgs/agileek/repos&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nous avons un joli résultat bien formaté …&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;err&quot;&gt;HTTP/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Access-Control-Allow-Credentials:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Access-Control-Allow-Origin:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...plein&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;de&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;headers...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;X-XSS-Protection:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;mode=block&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;archive_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/{archive_format}{/ref}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;assignees_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/assignees{/user}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;blobs_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/git/blobs{/sha}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;branches_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/branches{/branch}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;clone_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/agileek/agileek.github.io.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;collaborators_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/collaborators{/collaborator}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;comments_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/comments{/number}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;commits_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/commits{/sha}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;compare_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/compare/{base}...{head}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;contents_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/contents/{+path}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;contributors_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/contributors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;created_at&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2014-07-23T09:51:52Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;default_branch&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;master&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;downloads_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/downloads&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;events_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io/events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fork&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.github.com/repos/agileek/agileek.github.io&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;....&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;trop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;de&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;données&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… mais il y a tout simplement trop d’informations. Si je veux trouver tous les repos qui ont un lien avec docker, comment je fais ?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mes solutions précédentes consistaient en une série de awk, sed…&lt;br /&gt; 
Vous savez ces choses dont on est fier quand on a un résultat mais quand on revient dessus quelques temps plus tard, on ne comprend plus rien.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;C’est là qu’intervient json. Pour y voir plus clair, n’affichons que les urls.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;http https://api.github.com/orgs/agileek/repos | json &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; url
https://api.github.com/repos/agileek/agileek.github.io
https://api.github.com/repos/agileek/docker
https://api.github.com/repos/agileek/docker-ansible
https://api.github.com/repos/agileek/docker-jenkins
https://api.github.com/repos/agileek/docker-tips&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;le ‘-a’ indique qu’on descend dans un array&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Voilà, ça pique moins les yeux quand même. Maintenant ne gardons que les urls qui contiennent docker&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;http https://api.github.com/orgs/agileek/repos | json &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'this.url.indexOf(&quot;docker&quot;) &amp;gt;= 0'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; url
https://api.github.com/repos/agileek/docker
https://api.github.com/repos/agileek/docker-ansible
https://api.github.com/repos/agileek/docker-jenkins
https://api.github.com/repos/agileek/docker-tips&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Voilà, c’est terminé ! le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-c&lt;/code&gt; indique que vous allez écrire du javascript pour retourner un boolean, je me sers du indexOf pour filtrer tout ce qui contient “docker”.&lt;/p&gt;

&lt;h3 id=&quot;pour-aller-plus-loin&quot;&gt;Pour aller plus loin&lt;/h3&gt;

&lt;p&gt;Je ne vous ai montré que l’interaction basique entre httpie et json, n’hésitez pas à jouer avec httpie pour faire des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PUT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;, c’est vraiment très intuitif, je ne peux déjà plus m’en passer.&lt;/p&gt;

&lt;h3 id=&quot;ps&quot;&gt;PS&lt;/h3&gt;

&lt;p&gt;Merci à &lt;a href=&quot;http://www.bloggure.info/&quot;&gt;Cédric Gatay&lt;/a&gt;, des &lt;a href=&quot;http://code-troopers.com/&quot;&gt;Code Troopers&lt;/a&gt; pour m’avoir fait découvrir HTTPie.&lt;/p&gt;

</description>
            <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
            <link>https://agileek.github.io/terminal/2015/04/14/httpie_and_json/</link>
            <guid isPermaLink="true">https://agileek.github.io/terminal/2015/04/14/httpie_and_json/</guid>
            
            
            <category>terminal</category>
            
        </item>
        
    </channel>
</rss>
